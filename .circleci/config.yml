version: 2

jobs:
  build:
    machine: true
    steps:
    - checkout
    - run: git submodule sync
    - run: git submodule update --init --recursive
    - restore_cache:
        keys:
        - source-v2-{{ .Branch }}-{{ .Revision }}
        - source-v2-{{ .Branch }}-
        - source-v2-
    - run:
        name: Compile cache
        command: |
          docker build -f Dockerfile_ci --build-arg BUILD_STEP=8 -t=steem .
          docker run -v $HOME/project:/var/test steem cp -r /usr/local/src/steem/build /var/test
          docker run -v $HOME/project:/var/test steem cp -r /usr/local/src/steem/.mtime_cache /var/test
          docker run -v $HOME/project:/var/test steem cp -r ~/.ccache /var/test
        no_output_timeout: 30m
    - save_cache:
        key: source-v2-{{ .Branch }}-{{ .Revision }}
        paths:
        - build
        - .mtime_cache
        - .ccache

  chain_test:
    machine: true
    steps:
    - checkout
    - run: git submodule sync
    - run: git submodule update --init --recursive
    - restore_cache:
        keys:
        - source-v2-{{ .Branch }}-{{ .Revision }}
        - source-v2-{{ .Branch }}-
        - source-v2-
    - run:
        name: Compile cache
        command: docker build -f Dockerfile_ci --build-arg BUILD_STEP=1 .
        no_output_timeout: 30m

  plugin_test:
    machine: true
    steps:
    - checkout
    - run: git submodule sync
    - run: git submodule update --init --recursive
    - restore_cache:
        keys:
        - source-v2-{{ .Branch }}-{{ .Revision }}
        - source-v2-{{ .Branch }}-
        - source-v2-
    - run:
        name: Compile cache
        command: docker build -f Dockerfile_ci --build-arg BUILD_STEP=2 .
        no_output_timeout: 30m

  test_fixed_string:
    machine: true
    steps:
    - checkout
    - run: git submodule sync
    - run: git submodule update --init --recursive
    - restore_cache:
        keys:
        - source-v2-{{ .Branch }}-{{ .Revision }}
        - source-v2-{{ .Branch }}-
        - source-v2-
    - run:
        name: Compile cache
        command: docker build -f Dockerfile_ci --build-arg BUILD_STEP=3 .
        no_output_timeout: 30m

  get_config_check:
    machine: true
    steps:
    - checkout
    - run: git submodule sync
    - run: git submodule update --init --recursive
    - restore_cache:
        keys:
        - source-v2-{{ .Branch }}-{{ .Revision }}
        - source-v2-{{ .Branch }}-
        - source-v2-
    - run:
        name: Compile cache
        command: docker build -f Dockerfile_ci --build-arg BUILD_STEP=4 .
        no_output_timeout: 30m

  doxygen:
    machine: true
    steps:
    - checkout
    - run: git submodule sync
    - run: git submodule update --init --recursive
    - restore_cache:
        keys:
        - source-v2-{{ .Branch }}-{{ .Revision }}
        - source-v2-{{ .Branch }}-
        - source-v2-
    - run:
        name: Compile cache
        command: docker build -f Dockerfile_ci --build-arg BUILD_STEP=5 .
        no_output_timeout: 30m

  coverage:
    machine: true
    steps:
    - checkout
    - run: git submodule sync
    - run: git submodule update --init --recursive
    - restore_cache:
        keys:
        - source-v2-{{ .Branch }}-{{ .Revision }}
        - source-v2-{{ .Branch }}-
        - source-v2-
    - run:
        name: Compile cache
        command: |
          docker build -f Dockerfile_ci --build-arg BUILD_STEP=6 .
          docker run -v $HOME/project:/var/test steem cp /usr/local/src/steem/coverage.info /var/test
          wget -O - https://codecov.io/bash | bash || echo "Codecov did not collect coverage reports"
        no_output_timeout: 30m

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
    - build
    - chain_test:
        requires:
        - build
    - plugin_test:
        requires:
        - build
    - test_fixed_string:
        requires:
        - build
    - get_config_check:
        requires:
        - build
    - doxygen:
        requires:
        - build
    - coverage:
        requires:
        - chain_test
        - plugin_test
        - test_fixed_string
        - get_config_check
        - doxygen